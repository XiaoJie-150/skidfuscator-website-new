import{_ as o,W as r,X as i,Y as a,Z as t,$ as e,a0 as s,D as d}from"./framework-668aa7f5.js";const c={},l=s(`<h1 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h1><h1 id="why-skidfuscator" tabindex="-1"><a class="header-anchor" href="#why-skidfuscator" aria-hidden="true">#</a> Why Skidfuscator?</h1><p>Skidfuscator is a java obfuscator for software developers and companies seeking to protect their Java-based applications from reverse engineering, tampering, and intellectual property theft. Skidfuscator employs a variety of advanced obfuscation techniques, such as control flow obfuscation, string encryption, and class and method renaming, which render the decompiled code significantly harder to understand and analyze. By utilizing these techniques, Skidfuscator increases the effort required to reverse engineer the application, effectively deterring potential attackers and preserving your competitive edge in the market.</p><h1 id="how-to-use" tabindex="-1"><a class="header-anchor" href="#how-to-use" aria-hidden="true">#</a> How to use</h1><p>Skidfuscator seeks to be a drag and drop experience, all you need to do is execute the following command to run obfuscation on your project:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>java -jar Skidfuscator.jar obfuscate &lt;path to jar&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://i.ibb.co/4MQnj4V/FE185-E3-B-0-D0-D-4-ACC-81-AA-A4862-DF01-FA3.gif" alt="Cool gif" tabindex="0" loading="lazy"><figcaption>Cool gif</figcaption></figure><h1 id="features" tabindex="-1"><a class="header-anchor" href="#features" aria-hidden="true">#</a> Features</h1><p>We currently are working on a variety of ways to approach this system using various lightweight obfuscation methods.</p><h4 id="skidfuscator-is-backed-by-research" tabindex="-1"><a class="header-anchor" href="#skidfuscator-is-backed-by-research" aria-hidden="true">#</a> <strong>Skidfuscator is backed by research</strong></h4>`,10),p={href:"https://researchspace.auckland.ac.nz/bitstream/handle/2292/3491/TR148.pdf",target:"_blank",rel:"noopener noreferrer"},u=s('<h4 id="skidfuscator-is-not-just-another-obfuscator" tabindex="-1"><a class="header-anchor" href="#skidfuscator-is-not-just-another-obfuscator" aria-hidden="true">#</a> <strong>Skidfuscator is not just-another-obfuscator</strong></h4><p>By leveraging the fact that your program is a culmination of many classes and methods, Skidfuscator is the second obfuscator to introduce interprocedural obfuscation. This makes reverse-engineering exponentially more complex and thwarts most if not all currently available deobfuscation tools.</p><h4 id="skidfuscator-is-compatible" tabindex="-1"><a class="header-anchor" href="#skidfuscator-is-compatible" aria-hidden="true">#</a> <strong>Skidfuscator is compatible</strong></h4><p>With the optic of stability, Skidfuscator is compatible from Java 1.8 to Java 18. In addition, Skidfuscator offers pre-existing configurations for popular tools, such as Spigot, Forge, and Sponge for Minecraft, JDA for Discord, and various other toolset commonly prevalent in the Java community.</p><h4 id="learn-more-about-skidfuscator" tabindex="-1"><a class="header-anchor" href="#learn-more-about-skidfuscator" aria-hidden="true">#</a> <strong>Learn more about Skidfuscator</strong></h4>',5),h=a("code",null,"mastermind@artemis.ac",-1),f={href:"https://discord.gg/mTaZDCngEW",target:"_blank",rel:"noopener noreferrer"},b=s(`<h4 id="transformers" tabindex="-1"><a class="header-anchor" href="#transformers" aria-hidden="true">#</a> <strong>Transformers</strong></h4><p>As of right now, the following transformers are available in Skidfuscator:</p><table><thead><tr><th>Obfuscation Strategy</th><th>JObfuscator</th><th>Zelix KlassMaster</th><th>Skidfuscator Community</th><th>Skidfuscator Enterprise</th></tr></thead><tbody><tr><td>Third Generation Flow</td><td>❌</td><td>❌</td><td>✅</td><td>✅</td></tr><tr><td>Bogus Jump Obfuscation</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>Bogus Exception Obfuscation</td><td>❌</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>Mangled Jump Obfuscation</td><td>❌</td><td>❌</td><td>❌</td><td>✅</td></tr><tr><td>Exception Jump Obfuscation</td><td>❌</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>String Encryption</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>Polymorphic String Encryption</td><td>❌</td><td>❌</td><td>❌</td><td>✅</td></tr><tr><td>Constant Encryption</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>Method Inlining</td><td>❌</td><td>❌</td><td>❌</td><td>SoonTM</td></tr><tr><td>Method Outlining</td><td>❌</td><td>❌</td><td>❌</td><td>✅</td></tr><tr><td>Initialisation Outlining</td><td>❌</td><td>❌</td><td>❌</td><td>✅</td></tr><tr><td>Annotation Encryption</td><td>❌</td><td>❌</td><td>❌</td><td>✅</td></tr><tr><td>Reference Encryption</td><td>❌</td><td>✅</td><td>❌</td><td>✅</td></tr><tr><td>Renaming Obfuscation</td><td>✅</td><td>✅</td><td>❌</td><td>✅</td></tr><tr><td>Return Obfuscation</td><td>❌</td><td>❌</td><td>❌</td><td>✅</td></tr><tr><td>Method Parameter Obfuscation</td><td>❌</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>Native Driver Obfuscation</td><td>❌</td><td>❌</td><td>❌</td><td>✅</td></tr><tr><td>Crasher Obfuscation</td><td>❌</td><td>❌</td><td>❌</td><td>✅</td></tr></tbody></table><h1 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h1><h3 id="unobfuscated" tabindex="-1"><a class="header-anchor" href="#unobfuscated" aria-hidden="true">#</a> Unobfuscated</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">exportLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">File</span> output <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;calculations.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">BufferedWriter</span> writer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedWriter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileWriter</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        logs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>log <span class="token operator">-</span> <span class="token operator">&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">boolean</span> shouldPrintNewLine <span class="token operator">=</span> <span class="token operator">!</span>log<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>shouldPrintNewLine<span class="token punctuation">)</span>
                    writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        writer<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="obfuscated" tabindex="-1"><a class="header-anchor" href="#obfuscated" aria-hidden="true">#</a> Obfuscated</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name">KK0oK0o</span>$<span class="token class-name">KK0oKOo</span>$<span class="token class-name">KK0oKK</span><span class="token punctuation">(</span><span class="token keyword">int</span> var1_1<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token comment">/*
     * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
     * 
     * org.benf.cfr.reader.util.ConfusedCFRException: Extractable last case doesn&#39;t follow previous, and can&#39;t clone.
     *     at org.benf.cfr.reader.bytecode.analysis.opgraph.op3rewriters.SwitchReplacer.examineSwitchContiguity(SwitchReplacer.java:611)
     *     at org.benf.cfr.reader.bytecode.analysis.opgraph.op3rewriters.SwitchReplacer.replaceRawSwitches(SwitchReplacer.java:94)
     *     at org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:517)
     *     at org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:278)
     *     at org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:201)
     *     at org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
     *     at org.benf.cfr.reader.entities.Method.analyse(Method.java:531)
     *     at org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1055)
     *     at org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:942)
     *     at org.benf.cfr.reader.Driver.doClass(Driver.java:84)
     *     at org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:78)
     */</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;Decompilation failed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="samples" tabindex="-1"><a class="header-anchor" href="#samples" aria-hidden="true">#</a> Samples</h1><p>Don&#39;t believe us? Try it yourself! Here below are some samples providing examples of the security we bring.</p><table><thead><tr><th>Sample name</th><th>Unobfuscated</th><th>Obfuscated</th><th>Info</th></tr></thead><tbody><tr><td>Evaluator</td><td><a href="files/evaluator-unobf.jar">Download</a></td><td><a href="files/evaluator-obf.jar">Download</a></td><td>Prints out various debugging informations and unit tests</td></tr></tbody></table><h1 id="credits" tabindex="-1"><a class="header-anchor" href="#credits" aria-hidden="true">#</a> Credits</h1><h2 id="libraries-used" tabindex="-1"><a class="header-anchor" href="#libraries-used" aria-hidden="true">#</a> Libraries used</h2>`,13),k={href:"https://github.com/LLVM-but-worse/maple-ir",target:"_blank",rel:"noopener noreferrer"},m={href:"https://gitlab.ow2.org/asm/asm",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/sim0n/anti-java-agent/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/Col-E/Recaf",target:"_blank",rel:"noopener noreferrer"},y={href:"https://github.com/xxDark",target:"_blank",rel:"noopener noreferrer"},w=a("h2",{id:"inspired-from",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#inspired-from","aria-hidden":"true"},"#"),t(" Inspired from")],-1),x={href:"https://github.com/soot-oss/soot",target:"_blank",rel:"noopener noreferrer"},_={href:"https://zelix.com",target:"_blank",rel:"noopener noreferrer"};function S(C,j){const n=d("ExternalLinkIcon");return r(),i("div",null,[l,a("p",null,[t("Inspired by the greats, such as Christian Collberg's "),a("a",p,[t("Taxonomy of Obfuscation"),e(n)]),t(", and many more academic papers, Skidfuscator is the implementation in which theory meets real-world use.")]),u,a("p",null,[t("Do not hesitate to ask all sales questions to "),h,t("or to "),a("a",f,[t("join our discord"),e(n)])]),b,a("ul",null,[a("li",null,[a("a",k,[t("Maple IR and the Team"),e(n)])]),a("li",null,[a("a",m,[t("ASM"),e(n)])]),a("li",null,[a("a",v,[t("AntiDumper by Sim0n"),e(n)])]),a("li",null,[a("a",g,[t("Recaf by Col-E"),e(n)])]),a("li",null,[a("a",y,[t("Some works by xDark"),e(n)])])]),w,a("ul",null,[a("li",null,[a("a",x,[t("Soot"),e(n)])]),a("li",null,[a("a",_,[t("Zelix KlassMaster"),e(n)])])])])}const A=o(c,[["render",S],["__file","index.html.vue"]]);export{A as default};
